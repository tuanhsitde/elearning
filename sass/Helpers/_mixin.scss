@mixin styleText($color, $font-size, $font-weight) {
  color: $color;
  font-size: $font-size;
  font-weight: $font-weight;
}

@mixin styleButton($color,$bg-color,$border,$font-size,$font-weight,$pd-y,$pd-x) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid $border;
  font-size: $font-size;
  font-weight: $font-weight;
  padding: $pd-y $pd-x;
  cursor: pointer;
  transition: 0.5s;
}

@mixin hoverButton($color, $bg-color, $border) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid $border;
}

@mixin styleFormSearch($bg-color, $bg-color-focus, $border-color ) {
  .input-group {
    background-color: $bg-color;
    border-radius: 5px;
    input {
      background-color: transparent;
      border-color: transparent;
      box-shadow: none;
      color: $color-black-light;
      &::placeholder {
        color: $color-black-light;
      }
      &:focus {
        background-color: $bg-color-focus;
        border-top-color: $border-color;
        border-left-color: $border-color;
        border-bottom-color: $border-color;
      }
      &:focus + span {
        background-color: $bg-color-focus;
        border-top-color: $border-color;
        border-bottom-color: $border-color;
        border-right-color: $border-color;
        &:hover {
          background-color: $color-red-0;
          border-color: $color-red-0;
          border-radius: 5px;
        }
      }
    }
    span {
      background-color: transparent;
      border-color: transparent;
      color: $color-red-0;
      //transition: 0.5s;
      &:hover {
        color: $color-white;
        background-color: $color-red-0;
      }
    }
  }
}

@mixin responsive($screen) {
  @if map-has-key($map: $breakpoints, $key: $screen) {
    $value: map-get($map:$breakpoints, $key:$screen);
    @media screen and (max-width: $value) {
      @content
    }
  }
  @else {
    @warn "`{$screen}` is not a valid for `#{$breakpoints}`.";
  }
}